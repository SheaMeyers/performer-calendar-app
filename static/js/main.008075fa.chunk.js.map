{"version":3,"sources":["redux.ts","components/HeaderBar.tsx","api.ts","components/SearchPerformers.tsx","utils.ts","components/Performer.tsx","components/PerformersList.tsx","components/PerformerCalendar.tsx","components/Home.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["persistConfig","key","storage","initialState","allPerformers","selectedPerformers","events","persistedReducer","persistReducer","state","action","type","payload","filter","performer","name","event","title","store","createStore","persistor","persistStore","useStyles","makeStyles","theme","createStyles","headerBar","backgroundColor","marginBottom","headerBarToolbar","flexDirection","alignItems","headerBarTitle","color","fontSize","headerBarSubTitle","headerBarTextDiv","flexGrow","display","ticketmasterImage","height","marginLeft","extraInfoText","HeaderBar","classes","AppBar","position","className","Toolbar","Typography","variant","href","target","rel","src","alt","getEvents","keyword","hexColor","a","axios","get","data","_embedded","forEach","push","id","start","dates","dateTime","end","split","url","root","padding","input","spacing","flex","iconButton","SearchPerformers","dispatch","useDispatch","useState","query","setQuery","searchEvents","newHexColor","Math","floor","random","toString","showCheckbox","Paper","InputBase","onChange","value","placeholder","inputProps","onKeyDown","e","code","IconButton","aria-label","onClick","paper","margin","icon","cursor","Performer","props","checked","setChecked","Checkbox","style","_","background","PerformerList","useSelector","map","card","PerformerCalendar","performers_titles","Card","CardContent","localizer","momentLocalizer","moment","includes","Date","startAccessor","endAccessor","tooltipAccessor","tooltip","eventPropGetter","opacity","border","onSelectEvent","syntheticEvent","window","open","Home","PerformersList","App","loading","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.008075fa.chunk.js","sourcesContent":["import { createStore } from \"redux\"\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { Performer, Event } from './interfaces'\n\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n}\n\n\nexport interface ReduxState {\n    allPerformers: Performer[]\n    selectedPerformers: Performer[]\n    events: Event[]\n    email?: string\n}\n\nconst initialState = {\n    allPerformers: [],\n    selectedPerformers: [],\n    events: [],\n}\n\n\nexport type ReduxAction = \n{ type: \"ADD_SELECTED_PERFORMER\", payload: Performer } |\n{ type: \"ADD_PERFORMERS\", payload: Performer[] } |\n{ type: \"REMOVE_SELECTED_PERFORMER\", payload: string } |\n{ type: \"REMOVE_PERFORMER\", payload: string } |\n{ type: \"ADD_EVENTS\", payload: Event[] } |\n{ type: \"REMOVE_EVENTS\", payload: string }\n\n\nexport const performerReducer = (\n    state: ReduxState = initialState,\n    action: ReduxAction\n) => {\n    switch (action.type) {\n        case \"ADD_SELECTED_PERFORMER\": {\n            return { ...state, selectedPerformers: [...state.selectedPerformers, action.payload] }\n        }\n        case \"REMOVE_SELECTED_PERFORMER\": {\n            return {\n                ...state,\n                selectedPerformers: state.selectedPerformers.filter(performer => performer.name !== action.payload)\n            }\n        }\n        case \"ADD_PERFORMERS\": {\n            return {\n                ...state,\n                selectedPerformers: [...state.selectedPerformers, ...action.payload],\n                allPerformers: [...state.allPerformers, ...action.payload]\n            }\n        }\n        case \"REMOVE_PERFORMER\": {\n            return {\n                ...state,\n                selectedPerformers: state.selectedPerformers.filter(performer => performer.name !== action.payload),\n                allPerformers: state.allPerformers.filter(performer => performer.name !== action.payload)\n            }\n        }\n        case \"ADD_EVENTS\": {\n            return { ...state, events: [...state.events, ...action.payload] }\n        }\n        case \"REMOVE_EVENTS\": {\n            return { ...state, events: state.events.filter(event => event.title !== action.payload) }\n        }\n        default:\n            return state\n    }\n}\n\nconst persistedReducer = persistReducer<any, any>(persistConfig, performerReducer)\n\nexport const store = createStore(persistedReducer)\nexport const persistor = persistStore(store)\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    headerBar: {\n      backgroundColor: \"#ffffff\",\n      marginBottom: \"1rem\"\n    },\n    headerBarToolbar: {\n      ['@media (max-width:450px)']: {  // eslint-disable-line no-useless-computed-key\n        flexDirection: 'column',\n        alignItems: 'flex-start'\n      }\n    },\n    headerBarTitle: {\n        color: \"#000000\",\n        fontSize: \"1.5rem\"\n    },\n    headerBarSubTitle: {\n        color: \"#000000\",\n        fontSize: \"1rem\"\n    },\n    headerBarTextDiv: {\n        flexGrow: 1,\n        display: 'flex'\n    },\n    ticketmasterImage: {\n      height: '45px',\n      marginLeft: '5px'\n    },\n    extraInfoText: {\n      color: \"#000000\",\n      fontSize: \"1rem\"\n    }\n  }),\n)\n\n\nconst HeaderBar = () => {\n\n    const classes = useStyles()\n\n    return (\n        <AppBar position=\"static\" className={classes.headerBar}>\n            <Toolbar className={classes.headerBarToolbar}>\n                <div className={classes.headerBarTextDiv}>\n                  <div>\n                      <Typography className={classes.headerBarTitle} variant=\"h1\">Ticketmaster Calendar</Typography>\n                      <Typography className={classes.headerBarSubTitle} variant=\"h2\">\n                          Independently operated.  Powered by\n                      </Typography>\n                  </div>\n                  <a href=\"https://ticketmaster.com/?ticketmastercalendardotcom=true\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img src=\"./TicketmasterLogo.png\" className={classes.ticketmasterImage} alt=\"Ticketmaster Calendar\" />\n                  </a>\n                </div>\n                <Typography className={classes.extraInfoText} variant=\"h2\">\n                  Questions?  <br/>\n                  <a href=\"https://github.com/SheaMeyers/performer-calendar-app\" target=\"_blank\" rel=\"noopener noreferrer\">see the code</a>\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default HeaderBar\n","import axios from \"axios\"\nimport { Event } from \"./interfaces\"\n\nexport const TICKETMASTER_ENDPOINT = 'https://app.ticketmaster.com/discovery/v2/'\n\n// Note: While having an API Key publicly available is generally a bad practice, \n//   this is a free key that anyone can get from Ticketmaster and so there is really\n//   no point in stealing it.  This also allows anyone cloning the repo to more\n//   easily test the code out.\nexport const TICKETMASTER_APIKEY = 'OIcjO8xAGvyfG7rv47wVPnh5O3IdCO4G'\n\n\nexport const getEvents = async (keyword: string, hexColor: string): Promise<Event[]> => {\n    const events: Event[] = []\n    try {\n        const response = await axios.get(`${TICKETMASTER_ENDPOINT}events.json?keyword=${keyword}&apikey=${TICKETMASTER_APIKEY}`)\n        response.data._embedded.events.forEach((event: any): void => {\n            events.push({\n                id: event.id,\n                title: keyword,\n                start: event.dates.start.dateTime,\n                end: event.dates.start.dateTime.split('T')[0] + 'T23:59:59',\n                hexColor,\n                url: event.url\n            })\n        })\n    } catch (e) { }\n    return events\n}\n","import { useState } from 'react'\nimport { useDispatch } from \"react-redux\"\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport IconButton from '@material-ui/core/IconButton'\nimport InputBase from '@material-ui/core/InputBase'\nimport Paper from '@material-ui/core/Paper'\nimport SearchIcon from '@material-ui/icons/Search'\nimport { getEvents } from '../api'\nimport { ShowPerformer } from '../interfaces'\nimport { generateHexColor } from '../utils'\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: '2px 4px',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1,\n    },\n    iconButton: {\n      padding: 10,\n    },\n  }),\n)\n\nconst SearchPerformers = () => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const [query, setQuery] = useState<string>('')\n\n  const searchEvents = async () => {\n    if (!query) return\n    \n    const newHexColor = generateHexColor()\n    const events = await getEvents(query, newHexColor)\n    const newResult: ShowPerformer = {\n      hexColor: newHexColor,\n      id: newHexColor,\n      name: query,\n      showCheckbox: true\n    }\n    dispatch({ type: \"ADD_PERFORMERS\", payload: [newResult] })\n    dispatch({ type: \"ADD_EVENTS\", payload: events })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <InputBase\n        onChange={event => setQuery(event.target.value)}\n        value={query}\n        className={classes.input}\n        placeholder=\"Search Performers\"\n        inputProps={{ 'aria-label': 'Search performers' }}\n        onKeyDown={async e => {\n          if (e.code === \"Enter\") {\n            await searchEvents()\n          }\n        }}\n      />\n      <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\"  onClick={async () => await searchEvents()}>\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  )\n\n}\n\nexport default SearchPerformers\n","export const generateHexColor = (): string => `#${Math.floor(Math.random()*16777215).toString(16)}`\n","import React, { useState } from 'react'\nimport { useDispatch } from \"react-redux\"\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Paper from '@material-ui/core/Paper'\nimport { ShowPerformer } from '../interfaces'\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      display: 'flex',\n      alignItems: 'center',\n      margin: '1rem 0',\n      padding: '0 1rem'\n    },\n    name: {\n      flexGrow: 1\n    },\n    icon: {\n      color: 'red',\n      cursor: 'pointer'\n    }\n  }),\n)\n\nconst Performer = (props: ShowPerformer) => {\n\n  const [checked, setChecked] = useState<boolean>(true)\n\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setChecked(event.target.checked)\n    if (event.target.checked) {\n      dispatch({ type: \"ADD_SELECTED_PERFORMER\", payload: props })\n    } else {\n      dispatch({ type: \"REMOVE_SELECTED_PERFORMER\", payload: props.name })\n    }\n  }\n\n  return (\n    <Paper className={classes.paper}>\n      {props.showCheckbox &&\n        <Checkbox\n          checked={checked}\n          onChange={handleChange}\n          style={{ color: `${props.hexColor}` }}\n        />\n      }\n      <p className={classes.name}>{props.name}</p>\n      <HighlightOffIcon\n        className={classes.icon}\n        onClick={_ => {\n          dispatch({ type: \"REMOVE_PERFORMER\", payload: props.name })\n          dispatch({ type: \"REMOVE_EVENTS\", payload: props.name })\n        }}\n      />\n    </Paper>\n  )\n\n}\n\nexport default Performer\n","import { useSelector } from \"react-redux\"\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport { ReduxState } from \"../redux\"\nimport SearchPerformers from './SearchPerformers'\nimport Performer from './Performer'\nimport { Performer as PerformerInterface } from '../interfaces'\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        paper: {\n            padding: '1rem',\n            background: 'lightgrey'\n        },\n    }),\n)\n\n\ninterface PerformerListProps {\n    showCheckbox?: boolean\n}\n\n\nconst PerformerList = (props: PerformerListProps) => {\n    const classes = useStyles()\n\n    const allPerformers = useSelector<ReduxState, ReduxState[\"allPerformers\"]>(\n        (state) => state.allPerformers\n      )\n\n    return (\n        <Paper className={classes.paper}>\n            <SearchPerformers />\n            {allPerformers.map((performer: PerformerInterface) => {\n                return (\n                    <Performer \n                        id={performer.id}\n                        key={performer.name} \n                        name={performer.name} \n                        hexColor={performer.hexColor} \n                        showCheckbox={props.showCheckbox}\n                    />\n                )\n            })}\n        </Paper>\n    )\n\n}\n\nexport default PerformerList\n","import { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\nimport { useSelector } from \"react-redux\"\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport { ReduxState } from \"../redux\"\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\nimport { Performer, Event } from '../interfaces'\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        card: {\n            margin: '1rem'\n        }\n    }),\n)\n\n\nconst PerformerCalendar = () => {\n\n    let events = useSelector<ReduxState, ReduxState[\"events\"]>(\n        (state) => state.events\n      )\n    const selectedPerformers = useSelector<ReduxState, ReduxState[\"selectedPerformers\"]>(\n        (state) => state.selectedPerformers\n      )\n    const performers_titles = selectedPerformers.map((selectedPerformers: Performer) => selectedPerformers.name)\n\n    const eventStyleGetter = (event: Event) => {\n        const style = {\n            backgroundColor: event.hexColor,\n            opacity: 0.8,\n            color: 'black',\n            border: event.border\n        }\n        return {\n            style: style\n        }\n    }\n\n    const eventTooltipGetter = (event: Event) => {\n        return event.tooltip || event.title\n    }\n\n    const handleOnSelectEvent = (event: Event, syntheticEvent: React.SyntheticEvent) => {\n        window.open(event.url, \"_blank\", \"noopener\")\n    }\n\n    const classes = useStyles()\n\n    return (\n        <Card className={classes.card}>\n            <CardContent>\n                <Calendar\n                    localizer={momentLocalizer(moment)}\n                    events={events\n                            .filter((event: Event) => performers_titles.includes(event.title))\n                            .map((event: Event) => ({ ...event, start: new Date(event.start), end: new Date(event.end) }))\n                        }\n                    startAccessor=\"start\"\n                    endAccessor=\"end\"\n                    style={{ height: 500 }}\n                    tooltipAccessor={eventTooltipGetter}\n                    eventPropGetter={eventStyleGetter}\n                    onSelectEvent={handleOnSelectEvent}\n                />\n            </CardContent>\n        </Card>\n    )\n}\n\nexport default PerformerCalendar\n","import React from 'react'\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport PerformersList from './PerformersList'\nimport PerformerCalendar from './PerformerCalendar'\nimport '../css/Home.css'\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      margin: '1rem'\n    }\n  }),\n)\n\nconst Home = () => {\n\n  const classes = useStyles()\n\n  return (\n    <div className=\"Home\">\n      <Card className={classes.card}>\n        <CardContent>\n          <h2>Performers</h2>\n          <PerformersList showCheckbox={true} />\n        </CardContent>\n      </Card>\n      <PerformerCalendar />\n    </div>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { store, persistor } from '../redux'\nimport HeaderBar from './HeaderBar'\nimport Home from './Home'\n\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <HeaderBar />\n        <Home />\n      </PersistGate>\n    </Provider>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './css/index.css'\nimport App from './components/App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}