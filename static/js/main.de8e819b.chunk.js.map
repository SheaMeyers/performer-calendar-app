{"version":3,"sources":["redux.ts","components/HeaderBar.tsx","api.ts","components/SearchPerformers.tsx","utils.ts","components/Performer.tsx","components/PerformersList.tsx","components/utils/constants.ts","components/utils/eventLevels.ts","components/Agenda.tsx","components/utils/dates.ts","components/utils/selection.ts","components/PerformerCalendar.tsx","components/Home.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["persistConfig","key","storage","initialState","allPerformers","selectedPerformers","events","persistedReducer","persistReducer","state","action","type","payload","filter","performer","name","event","title","store","createStore","persistor","persistStore","useStyles","makeStyles","theme","createStyles","headerBar","backgroundColor","marginBottom","headerBarToolbar","flexDirection","alignItems","headerBarTitle","color","fontSize","headerBarSubTitle","headerBarTextDiv","flexGrow","display","ticketmasterImage","height","marginLeft","extraInfoText","HeaderBar","classes","AppBar","position","className","Toolbar","Typography","variant","href","target","rel","src","alt","getEvents","keyword","hexColor","a","axios","get","data","_embedded","forEach","push","id","start","dates","dateTime","end","split","url","location","venues","city","country","e","root","padding","input","spacing","flex","iconButton","SearchPerformers","dispatch","useDispatch","useState","query","setQuery","searchEvents","newHexColor","Math","floor","random","toString","showCheckbox","Paper","InputBase","onChange","value","placeholder","inputProps","onKeyDown","code","IconButton","aria-label","onClick","paper","margin","icon","cursor","Performer","props","checked","setChecked","Checkbox","style","_","background","PerformerList","useSelector","map","navigate","inRange","accessors","eStart","eEnd","startsBeforeEnd","endsAfterStart","Agenda","selected","getters","localizer","components","length","date","headerRef","useRef","dateColRef","timeColRef","contentRef","tbodyRef","useEffect","_adjustHeader","timeRangeLabel","day","labelClass","TimeComponent","time","label","messages","allDay","format","trim","current","firstChild","header","firstRow","isOverflowing","scrollHeight","clientHeight","_widths","widths","getWidth","children","width","addClass","marginRight","scrollbarSize","removeClass","range","unit","days","sort","b","Fragment","ref","idx","dayKey","Event","AgendaDate","userProps","eventProp","indexOf","isSelected","dateLabel","first","rowSpan","window","open","renderDay","noEventsInRange","options","card","PerformerCalendar","performers_titles","Card","CardContent","momentLocalizer","moment","includes","Date","startAccessor","endAccessor","tooltipAccessor","tooltip","eventPropGetter","opacity","border","onSelectEvent","syntheticEvent","views","week","month","agenda","Home","PerformersList","App","loading","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de8e819b.chunk.js","sourcesContent":["import { createStore } from \"redux\"\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { Performer, Event } from './interfaces'\n\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n}\n\n\nexport interface ReduxState {\n    allPerformers: Performer[]\n    selectedPerformers: Performer[]\n    events: Event[]\n    email?: string\n}\n\nconst initialState = {\n    allPerformers: [],\n    selectedPerformers: [],\n    events: [],\n}\n\n\nexport type ReduxAction = \n{ type: \"ADD_SELECTED_PERFORMER\", payload: Performer } |\n{ type: \"ADD_PERFORMERS\", payload: Performer[] } |\n{ type: \"REMOVE_SELECTED_PERFORMER\", payload: string } |\n{ type: \"REMOVE_PERFORMER\", payload: string } |\n{ type: \"ADD_EVENTS\", payload: Event[] } |\n{ type: \"REMOVE_EVENTS\", payload: string }\n\n\nexport const performerReducer = (\n    state: ReduxState = initialState,\n    action: ReduxAction\n) => {\n    switch (action.type) {\n        case \"ADD_SELECTED_PERFORMER\": {\n            return { ...state, selectedPerformers: [...state.selectedPerformers, action.payload] }\n        }\n        case \"REMOVE_SELECTED_PERFORMER\": {\n            return {\n                ...state,\n                selectedPerformers: state.selectedPerformers.filter(performer => performer.name !== action.payload)\n            }\n        }\n        case \"ADD_PERFORMERS\": {\n            return {\n                ...state,\n                selectedPerformers: [...state.selectedPerformers, ...action.payload],\n                allPerformers: [...state.allPerformers, ...action.payload]\n            }\n        }\n        case \"REMOVE_PERFORMER\": {\n            return {\n                ...state,\n                selectedPerformers: state.selectedPerformers.filter(performer => performer.name !== action.payload),\n                allPerformers: state.allPerformers.filter(performer => performer.name !== action.payload)\n            }\n        }\n        case \"ADD_EVENTS\": {\n            return { ...state, events: [...state.events, ...action.payload] }\n        }\n        case \"REMOVE_EVENTS\": {\n            return { ...state, events: state.events.filter(event => event.title !== action.payload) }\n        }\n        default:\n            return state\n    }\n}\n\nconst persistedReducer = persistReducer<any, any>(persistConfig, performerReducer)\n\nexport const store = createStore(persistedReducer)\nexport const persistor = persistStore(store)\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    headerBar: {\n      backgroundColor: \"#ffffff\",\n      marginBottom: \"1rem\"\n    },\n    headerBarToolbar: {\n      ['@media (max-width:450px)']: {  // eslint-disable-line no-useless-computed-key\n        flexDirection: 'column',\n        alignItems: 'flex-start'\n      }\n    },\n    headerBarTitle: {\n        color: \"#000000\",\n        fontSize: \"1.5rem\"\n    },\n    headerBarSubTitle: {\n        color: \"#000000\",\n        fontSize: \"1rem\"\n    },\n    headerBarTextDiv: {\n        flexGrow: 1,\n        display: 'flex'\n    },\n    ticketmasterImage: {\n      height: '45px',\n      marginLeft: '5px'\n    },\n    extraInfoText: {\n      color: \"#000000\",\n      fontSize: \"1rem\"\n    }\n  }),\n)\n\n\nconst HeaderBar = () => {\n\n    const classes = useStyles()\n\n    return (\n        <AppBar position=\"static\" className={classes.headerBar}>\n            <Toolbar className={classes.headerBarToolbar}>\n                <div className={classes.headerBarTextDiv}>\n                  <div>\n                      <Typography className={classes.headerBarTitle} variant=\"h1\">Ticketmaster Calendar</Typography>\n                      <Typography className={classes.headerBarSubTitle} variant=\"h2\">\n                          Independently operated.  Powered by\n                      </Typography>\n                  </div>\n                  <a href=\"https://ticketmaster.com/?ticketmastercalendardotcom=true\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img src=\"./TicketmasterLogo.png\" className={classes.ticketmasterImage} alt=\"Ticketmaster Calendar\" />\n                  </a>\n                </div>\n                <Typography className={classes.extraInfoText} variant=\"h2\">\n                  Questions?  <br/>\n                  <a href=\"https://github.com/SheaMeyers/performer-calendar-app\" target=\"_blank\" rel=\"noopener noreferrer\">see the code</a>\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default HeaderBar\n","import axios from \"axios\"\nimport { Event } from \"./interfaces\"\n\nexport const TICKETMASTER_ENDPOINT = 'https://app.ticketmaster.com/discovery/v2/'\n\n// Note: While having an API Key publicly available is generally a bad practice, \n//   this is a free key that anyone can get from Ticketmaster and so there is really\n//   no point in stealing it.  This also allows anyone cloning the repo to more\n//   easily test the code out.\nexport const TICKETMASTER_APIKEY = 'OIcjO8xAGvyfG7rv47wVPnh5O3IdCO4G'\n\n\nexport const getEvents = async (keyword: string, hexColor: string): Promise<Event[]> => {\n    const events: Event[] = []\n    const response = await axios.get(`${TICKETMASTER_ENDPOINT}events.json?keyword=${keyword}&apikey=${TICKETMASTER_APIKEY}`)\n    response.data._embedded.events.forEach((event: any): void => {\n        try{\n            events.push({\n                id: event.id,\n                title: keyword,\n                start: event.dates.start.dateTime,\n                end: event.dates.start.dateTime.split('T')[0] + 'T23:59:59',\n                hexColor,\n                url: event.url,\n                location: event._embedded.venues[0].city.name + ', ' + event._embedded.venues[0].country.name\n            })\n        } catch (e) {}\n    })\n    return events\n}\n","import { useState } from 'react'\nimport { useDispatch } from \"react-redux\"\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport IconButton from '@material-ui/core/IconButton'\nimport InputBase from '@material-ui/core/InputBase'\nimport Paper from '@material-ui/core/Paper'\nimport SearchIcon from '@material-ui/icons/Search'\nimport { getEvents } from '../api'\nimport { ShowPerformer } from '../interfaces'\nimport { generateHexColor } from '../utils'\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: '2px 4px',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1,\n    },\n    iconButton: {\n      padding: 10,\n    },\n  }),\n)\n\nconst SearchPerformers = () => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const [query, setQuery] = useState<string>('')\n\n  const searchEvents = async () => {\n    if (!query) return\n    \n    const newHexColor = generateHexColor()\n    const events = await getEvents(query, newHexColor)\n    const newResult: ShowPerformer = {\n      hexColor: newHexColor,\n      id: newHexColor,\n      name: query,\n      showCheckbox: true\n    }\n    dispatch({ type: \"ADD_PERFORMERS\", payload: [newResult] })\n    dispatch({ type: \"ADD_EVENTS\", payload: events })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <InputBase\n        onChange={event => setQuery(event.target.value)}\n        value={query}\n        className={classes.input}\n        placeholder=\"Search Performers\"\n        inputProps={{ 'aria-label': 'Search performers' }}\n        onKeyDown={async e => {\n          if (e.code === \"Enter\") {\n            await searchEvents()\n          }\n        }}\n      />\n      <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\"  onClick={async () => await searchEvents()}>\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  )\n\n}\n\nexport default SearchPerformers\n","export const generateHexColor = (): string => `#${Math.floor(Math.random()*16777215).toString(16)}`\n","import React, { useState } from 'react'\nimport { useDispatch } from \"react-redux\"\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Paper from '@material-ui/core/Paper'\nimport { ShowPerformer } from '../interfaces'\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      display: 'flex',\n      alignItems: 'center',\n      margin: '1rem 0',\n      padding: '0 1rem'\n    },\n    name: {\n      flexGrow: 1\n    },\n    icon: {\n      color: 'red',\n      cursor: 'pointer'\n    }\n  }),\n)\n\nconst Performer = (props: ShowPerformer) => {\n\n  const [checked, setChecked] = useState<boolean>(true)\n\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setChecked(event.target.checked)\n    if (event.target.checked) {\n      dispatch({ type: \"ADD_SELECTED_PERFORMER\", payload: props })\n    } else {\n      dispatch({ type: \"REMOVE_SELECTED_PERFORMER\", payload: props.name })\n    }\n  }\n\n  return (\n    <Paper className={classes.paper}>\n      {props.showCheckbox &&\n        <Checkbox\n          checked={checked}\n          onChange={handleChange}\n          style={{ color: `${props.hexColor}` }}\n        />\n      }\n      <p className={classes.name}>{props.name}</p>\n      <HighlightOffIcon\n        className={classes.icon}\n        onClick={_ => {\n          dispatch({ type: \"REMOVE_PERFORMER\", payload: props.name })\n          dispatch({ type: \"REMOVE_EVENTS\", payload: props.name })\n        }}\n      />\n    </Paper>\n  )\n\n}\n\nexport default Performer\n","import { useSelector } from \"react-redux\"\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport { ReduxState } from \"../redux\"\nimport SearchPerformers from './SearchPerformers'\nimport Performer from './Performer'\nimport { Performer as PerformerInterface } from '../interfaces'\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        paper: {\n            padding: '1rem',\n            background: 'lightgrey'\n        },\n    }),\n)\n\n\ninterface PerformerListProps {\n    showCheckbox?: boolean\n}\n\n\nconst PerformerList = (props: PerformerListProps) => {\n    const classes = useStyles()\n\n    const allPerformers = useSelector<ReduxState, ReduxState[\"allPerformers\"]>(\n        (state) => state.allPerformers\n      )\n\n    return (\n        <Paper className={classes.paper}>\n            <SearchPerformers />\n            {allPerformers.map((performer: PerformerInterface) => {\n                return (\n                    <Performer \n                        id={performer.id}\n                        key={performer.name} \n                        name={performer.name} \n                        hexColor={performer.hexColor} \n                        showCheckbox={props.showCheckbox}\n                    />\n                )\n            })}\n        </Paper>\n    )\n\n}\n\nexport default PerformerList\n","export interface Navigate {\n  PREVIOUS: 'PREV',\n  NEXT: 'NEXT',\n  TODAY: 'TODAY',\n  DATE: 'DATE',\n}\n\nexport const navigate: Navigate = {\n  PREVIOUS: 'PREV',\n  NEXT: 'NEXT',\n  TODAY: 'TODAY',\n  DATE: 'DATE',\n}\n","import { Event } from '../../interfaces'\nimport * as dates from './dates'\n\nexport const inRange = (event: Event, start: Date, end: Date, accessors: any): boolean => {\n  let eStart = dates.startOf(accessors.start(event), 'day')\n  let eEnd = accessors.end(event)\n\n  let startsBeforeEnd = dates.lte(eStart, end, 'day')\n  // when the event is zero duration we need to handle a bit differently\n  let endsAfterStart = !dates.eq(eStart, eEnd, 'minutes')\n    ? dates.gt(eEnd, start, 'minutes')\n    : dates.gte(eEnd, start, 'minutes')\n\n  return startsBeforeEnd && endsAfterStart\n}","import React, { useRef, useEffect } from 'react'\nimport addClass from 'dom-helpers/addClass'\nimport removeClass from 'dom-helpers/removeClass'\nimport getWidth from 'dom-helpers/width'\nimport scrollbarSize from 'dom-helpers/scrollbarSize'\n\nimport { navigate } from './utils/constants'\nimport * as dates from './utils/dates'\nimport { inRange } from './utils/eventLevels'\nimport { isSelected } from './utils/selection'\nimport { Event } from '../interfaces'\n\ninterface AgendaInterface {\n  selected: Event[]\n  getters: any\n  accessors: any\n  localizer: any\n  components: any\n  length: number\n  date: Date\n  events: Event[]\n}\n\nconst Agenda = ({\n  selected,\n  getters,\n  accessors,\n  localizer,\n  components,\n  length,\n  date,\n  events,\n}: AgendaInterface) => {\n  const headerRef = useRef<HTMLTableElement>(null)\n  const dateColRef = useRef<HTMLTableCellElement>(null)\n  const timeColRef = useRef<HTMLTableCellElement>(null)\n  const contentRef = useRef<HTMLDivElement>(null)\n  const tbodyRef = useRef<HTMLTableSectionElement>(null)\n\n  useEffect(() => _adjustHeader())\n\n  const renderDay = (day: any, events: Event[], dayKey: any) => {\n    const { event: Event, date: AgendaDate } = components\n\n    events = events.filter(e =>\n      inRange(e, dates.startOf(day, 'day'), dates.endOf(day, 'day'), accessors)\n    )\n\n    return events.map((event: Event, idx) => {\n      const title = accessors.title(event)\n      const end = accessors.end(event)\n      const start = accessors.start(event)\n\n      const userProps = getters.eventProp(\n        event,\n        start,\n        end,\n        isSelected(event, selected)\n      )\n\n      const dateLabel = idx === 0 && localizer.format(day, 'agendaDateFormat')\n      const first =\n        idx === 0 ? (\n          <td rowSpan={events.length} className=\"rbc-agenda-date-cell\">\n            {AgendaDate ? (\n              <AgendaDate day={day} label={dateLabel} />\n            ) : (\n              dateLabel\n            )}\n          </td>\n        ) : (\n          false\n        )\n\n      return (\n        <tr\n          key={dayKey + '_' + idx}\n          className={userProps.className}\n          style={{...userProps.style, cursor: 'pointer'}}\n          onClick={() => window.open(event.url, \"_blank\")}\n        >\n            {first}\n            <td className=\"rbc-agenda-time-cell\">{timeRangeLabel(day, event)}</td>\n            <td className=\"rbc-agenda-event-cell\">\n              {Event ? <Event event={event} title={title} /> : title}\n            </td>\n            <td>{event.location}</td>\n        </tr>\n      )\n    }, [])\n  }\n\n  const timeRangeLabel = (day: any, event: Event) => {\n    let labelClass = '',\n      TimeComponent = components.time,\n      label = localizer.messages.allDay\n\n    const end = accessors.end(event)\n    const start = accessors.start(event)\n\n    if (!accessors.allDay(event)) {\n      if (dates.eq(start, end)) {\n        label = localizer.format(start, 'agendaTimeFormat')\n      } else if (dates.eq(start, end, 'day')) {\n        label = localizer.format({ start, end }, 'agendaTimeRangeFormat')\n      } else if (dates.eq(day, start, 'day')) {\n        label = localizer.format(start, 'agendaTimeFormat')\n      } else if (dates.eq(day, end, 'day')) {\n        label = localizer.format(end, 'agendaTimeFormat')\n      }\n    }\n\n    if (dates.gt(day, start, 'day')) labelClass = 'rbc-continues-prior'\n    if (dates.lt(day, end, 'day')) labelClass += ' rbc-continues-after'\n\n    return (\n      <span className={labelClass.trim()}>\n        {TimeComponent ? (\n          <TimeComponent event={event} day={day} label={label} />\n        ) : (\n          label\n        )}\n      </span>\n    )\n  }\n\n  const _adjustHeader = () => {\n    if (\n      !tbodyRef.current ||\n      !tbodyRef.current.firstChild ||\n      !contentRef.current ||\n      !dateColRef.current ||\n      !timeColRef.current ||\n      !headerRef.current\n    )\n      return;\n\n    const header = headerRef.current\n    const firstRow = (tbodyRef.current.firstChild as HTMLTableRowElement)\n\n    const isOverflowing =\n      contentRef.current.scrollHeight > contentRef.current.clientHeight\n\n    let _widths: number[] = []\n    const widths = _widths\n\n    _widths = [getWidth((firstRow.children[0] as HTMLElement)), getWidth((firstRow.children[1] as HTMLElement))]\n\n    if (widths[0] !== _widths[0] || widths[1] !== _widths[1]) {\n      dateColRef.current.style.width = _widths[0] + 'px'\n      timeColRef.current.style.width = _widths[1] + 'px'\n    }\n\n    if (isOverflowing) {\n      addClass(header, 'rbc-header-overflowing')\n      header.style.marginRight = scrollbarSize() + 'px'\n    } else {\n      removeClass(header, 'rbc-header-overflowing')\n    }\n  }\n\n  const { messages } = localizer\n  const end = dates.add(date, length, 'day')\n\n  const range = dates.range(date, end, 'day')\n\n  events = events.filter(event => inRange(event, date, end, accessors))\n\n  events.sort((a, b) => +accessors.start(a) - +accessors.start(b))\n\n  return (\n    <div className=\"rbc-agenda-view\">\n      {events.length !== 0 ? (\n        <React.Fragment>\n          <table ref={headerRef} className=\"rbc-agenda-table\">\n            <thead>\n              <tr>\n                <th className=\"rbc-header\" ref={dateColRef}>\n                  {messages.date}\n                </th>\n                <th className=\"rbc-header\" ref={timeColRef}>\n                  {messages.time}\n                </th>\n                <th className=\"rbc-header\">{messages.event}</th>\n                <th className=\"rbc-header\">Location</th>\n              </tr>\n            </thead>\n          </table>\n          <div className=\"rbc-agenda-content\" ref={contentRef}>\n            <table className=\"rbc-agenda-table\">\n              <tbody ref={tbodyRef}>\n                {range.map((day, idx) => renderDay(day, events, idx))}\n              </tbody>\n            </table>\n          </div>\n        </React.Fragment>\n      ) : (\n        <span className=\"rbc-agenda-empty\">{messages.noEventsInRange}</span>\n      )}\n    </div>\n  )\n}\n\nAgenda.range = (start: Date, { length = 30 }) => {\n  const end = dates.add(start, length, 'day')\n  return { start, end }\n}\n\nAgenda.navigate = (date: Date, action: string, { length = 30 }) => {\n  switch (action) {\n    case navigate.PREVIOUS:\n      return dates.add(date, -length, 'day')\n\n    case navigate.NEXT:\n      return dates.add(date, length, 'day')\n\n    default:\n      return date\n  }\n}\n\nAgenda.title = (date: Date, options: any) => {\n  return 'Agenda'\n}\n\nexport default Agenda\n","/* eslint no-fallthrough: off */\nimport * as dates from 'date-arithmetic'\n\nexport {\n  milliseconds,\n  seconds,\n  minutes,\n  hours,\n  month,\n  startOf,\n  endOf,\n  add,\n  eq,\n  gte,\n  gt,\n  lte,\n  lt,\n  inRange,\n  min,\n  max,\n} from 'date-arithmetic'\n\nconst MILLI = {\n  seconds: 1000,\n  minutes: 1000 * 60,\n  hours: 1000 * 60 * 60,\n  day: 1000 * 60 * 60 * 24,\n}\n\nconst MONTHS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n\nexport function monthsInYear(year: number) {\n  let date = new Date(year, 0, 1)\n\n  return MONTHS.map(i => dates.month(date, i))\n}\n\nexport function firstVisibleDay(date: Date, localizer: any) {\n  let firstOfMonth = dates.startOf(date, 'month')\n\n  return dates.startOf(firstOfMonth, 'week', localizer.startOfWeek())\n}\n\nexport function lastVisibleDay(date: Date, localizer: any) {\n  let endOfMonth = dates.endOf(date, 'month')\n\n  return dates.endOf(endOfMonth, 'week', localizer.startOfWeek())\n}\n\nexport function visibleDays(date: Date, localizer: any) {\n  let current = firstVisibleDay(date, localizer),\n    last = lastVisibleDay(date, localizer),\n    days = []\n\n  while (dates.lte(current, last, 'day')) {\n    days.push(current)\n    current = dates.add(current, 1, 'day')\n  }\n\n  return days\n}\n\nexport function ceil(date: Date, unit: \"milliseconds\" | \"seconds\" | \"minutes\" | \"hours\" | \"day\" | \"month\" | \"year\" | \"decade\" | \"century\") {\n  let floor = dates.startOf(date, unit)\n\n  return dates.eq(floor, date) ? floor : dates.add(floor, 1, unit)\n}\n\nexport function range(start: Date, end: Date, unit: dates.Unit | undefined = 'day') {\n  let current = start,\n    days = []\n\n  while (dates.lte(current, end, unit)) {\n    days.push(current)\n    current = dates.add(current, 1, unit)\n  }\n\n  return days\n}\n\nexport function merge(date: Date, time: Date) {\n  if (time == null && date == null) return null\n\n  if (time == null) time = new Date()\n  if (date == null) date = new Date()\n\n  date = dates.startOf(date, 'day')\n  date = dates.hours(date, dates.hours(time))\n  date = dates.minutes(date, dates.minutes(time))\n  date = dates.seconds(date, dates.seconds(time))\n  return dates.milliseconds(date, dates.milliseconds(time))\n}\n\nexport function eqTime(dateA: Date, dateB: Date) {\n  return (\n    dates.hours(dateA) === dates.hours(dateB) &&\n    dates.minutes(dateA) === dates.minutes(dateB) &&\n    dates.seconds(dateA) === dates.seconds(dateB)\n  )\n}\n\nexport function isJustDate(date: Date) {\n  return (\n    dates.hours(date) === 0 &&\n    dates.minutes(date) === 0 &&\n    dates.seconds(date) === 0 &&\n    dates.milliseconds(date) === 0\n  )\n}\n\nexport function diff(dateA: Date, dateB: Date, unit: \"seconds\" | \"minutes\" | \"hours\" | \"day\" | \"milliseconds\") {\n  if (!unit || unit === 'milliseconds') return Math.abs(+dateA - +dateB)\n\n  // the .round() handles an edge case\n  // with DST where the total won't be exact\n  // since one day in the range may be shorter/longer by an hour\n  return Math.round(\n    Math.abs(\n      +dates.startOf(dateA, unit) / MILLI[unit] -\n        +dates.startOf(dateB, unit) / MILLI[unit]\n    )\n  )\n}\n\nexport function total(date: Date, unit: dates.Unit) {\n  let ms = date.getTime(),\n    div = 1\n\n  switch (unit) {\n    case 'week':\n      div *= 7\n      break\n    case 'day':\n      div *= 24\n      break\n    case 'hours':\n      div *= 60\n      break\n    case 'minutes':\n      div *= 60\n      break\n    case 'seconds':\n      div *= 1000\n      break\n  }\n\n  return ms / div\n}\n\nexport function week(date: Date) {\n  var d = new Date(date)\n  d.setHours(0, 0, 0)\n  d.setDate(d.getDate() + 4 - (d.getDay() || 7))\n  return Math.ceil(((+d - +(new Date(d.getFullYear(), 0, 1))) / 8.64e7 + 1) / 7)\n}\n\nexport function today() {\n  return dates.startOf(new Date(), 'day')\n}\n\nexport function yesterday() {\n  return dates.add(dates.startOf(new Date(), 'day'), -1, 'day')\n}\n\nexport function tomorrow() {\n  return dates.add(dates.startOf(new Date(), 'day'), 1, 'day')\n}\n","import { Event } from \"../../interfaces\"\n\n\nexport const isSelected = (event: Event, selected: Event[]): boolean => {\n  if (!event || selected == null) return false\n  return selected.indexOf(event) !== -1\n}\n","import { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\nimport { useSelector } from \"react-redux\"\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport { ReduxState } from \"../redux\"\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\nimport { Performer, Event } from '../interfaces'\nimport Agenda from './Agenda'\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        card: {\n            margin: '1rem'\n        }\n    }),\n)\n\n\nconst PerformerCalendar = () => {\n\n    let events = useSelector<ReduxState, ReduxState[\"events\"]>(\n        (state) => state.events\n      )\n    const selectedPerformers = useSelector<ReduxState, ReduxState[\"selectedPerformers\"]>(\n        (state) => state.selectedPerformers\n      )\n    const performers_titles = selectedPerformers.map((selectedPerformers: Performer) => selectedPerformers.name)\n\n    const eventStyleGetter = (event: Event) => {\n        const style = {\n            backgroundColor: event.hexColor,\n            opacity: 0.8,\n            color: 'black',\n            border: event.border\n        }\n        return {\n            style: style\n        }\n    }\n\n    const eventTooltipGetter = (event: Event) => {\n        return event.tooltip || event.title\n    }\n\n    const handleOnSelectEvent = (event: Event, syntheticEvent: React.SyntheticEvent) => {\n        window.open(event.url, \"_blank\", \"noopener\")\n    }\n\n    const classes = useStyles()\n\n    return (\n        <Card className={classes.card}>\n            <CardContent>\n                <Calendar\n                    localizer={momentLocalizer(moment)}\n                    events={events\n                            .filter((event: Event) => performers_titles.includes(event.title))\n                            .map((event: Event) => ({ ...event, start: new Date(event.start), end: new Date(event.end) }))\n                        }\n                    startAccessor=\"start\"\n                    endAccessor=\"end\"\n                    style={{ height: 500 }}\n                    tooltipAccessor={eventTooltipGetter}\n                    eventPropGetter={eventStyleGetter}\n                    onSelectEvent={handleOnSelectEvent}\n\n                    views={{\n                        week: true,\n                        month: true,\n                        day: true,\n                        agenda: Agenda\n                      }}\n                    \n                />\n            </CardContent>\n        </Card>\n    )\n}\n\nexport default PerformerCalendar\n","import React from 'react'\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport PerformersList from './PerformersList'\nimport PerformerCalendar from './PerformerCalendar'\nimport '../css/Home.css'\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      margin: '1rem'\n    }\n  }),\n)\n\nconst Home = () => {\n\n  const classes = useStyles()\n\n  return (\n    <div className=\"Home\">\n      <Card className={classes.card}>\n        <CardContent>\n          <h2>Performers</h2>\n          <PerformersList showCheckbox={true} />\n        </CardContent>\n      </Card>\n      <PerformerCalendar />\n    </div>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { store, persistor } from '../redux'\nimport HeaderBar from './HeaderBar'\nimport Home from './Home'\n\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <HeaderBar />\n        <Home />\n      </PersistGate>\n    </Provider>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './css/index.css'\nimport App from './components/App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}