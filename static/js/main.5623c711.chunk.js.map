{"version":3,"sources":["redux.ts","components/HeaderBar.tsx","api.ts","components/SearchPerformersResultsModal.tsx","components/SearchPerformers.tsx","components/Performer.tsx","components/PerformersList.tsx","components/PerformerCalendar.tsx","components/Home.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["persistConfig","key","storage","initialState","allPerformers","selectedPerformers","events","persistedReducer","persistReducer","state","action","type","payload","filter","performer","name","event","title","store","createStore","persistor","persistStore","useStyles","makeStyles","theme","createStyles","headerBar","backgroundColor","marginBottom","headerBarToolbar","flexDirection","alignItems","headerBarTitle","color","fontSize","headerBarSubTitle","headerBarTextDiv","flexGrow","display","seatGeekImage","height","marginLeft","extraInfoText","HeaderBar","classes","AppBar","position","className","Toolbar","Typography","variant","href","target","rel","src","alt","SEATGEEK_ENDPOINT","SEATGEEK_APIKEY","paper","margin","padding","cursor","SearchPerformersResultsModal","props","useState","results","setResults","feedback","setFeedback","dispatch","useDispatch","useEffect","Modal","setAppElement","query","isOpen","axios","get","then","response","data","performers","map","id","hexColor","Math","floor","random","toString","showCheckbox","catch","_","contentLabel","closeTimeoutMS","result","Paper","onClick","start","datetime_local","end","split","url","handleModalClose","Button","root","input","spacing","flex","iconButton","SearchPerformers","setQuery","shouldSearchedModalBeOpen","setShouldSearchedModalBeOpen","InputBase","onChange","value","placeholder","inputProps","onKeyDown","e","code","IconButton","aria-label","icon","Performer","checked","setChecked","Checkbox","style","background","PerformerList","useSelector","card","PerformerCalendar","performers_titles","Card","CardContent","localizer","momentLocalizer","moment","includes","Date","startAccessor","endAccessor","tooltipAccessor","tooltip","eventPropGetter","opacity","border","onSelectEvent","syntheticEvent","window","open","Home","PerformersList","App","loading","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5623c711.chunk.js","sourcesContent":["import { createStore } from \"redux\"\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { Performer, Event } from './interfaces'\n\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n}\n\n\nexport interface ReduxState {\n    allPerformers: Performer[]\n    selectedPerformers: Performer[]\n    events: Event[]\n    email?: string\n}\n\nconst initialState = {\n    allPerformers: [],\n    selectedPerformers: [],\n    events: [],\n}\n\n\nexport type Action = \n{ type: \"ADD_SELECTED_PERFORMER\", payload: Performer } |\n{ type: \"ADD_PERFORMERS\", payload: Performer[] } |\n{ type: \"REMOVE_SELECTED_PERFORMER\", payload: string } |\n{ type: \"REMOVE_PERFORMER\", payload: string } |\n{ type: \"ADD_EVENTS\", payload: Event[] } |\n{ type: \"REMOVE_EVENTS\", payload: string }\n\n\nexport const performerReducer = (\n    state: ReduxState = initialState,\n    action: Action\n) => {\n    switch (action.type) {\n        case \"ADD_SELECTED_PERFORMER\": {\n            return { ...state, selectedPerformers: [...state.selectedPerformers, action.payload] }\n        }\n        case \"REMOVE_SELECTED_PERFORMER\": {\n            return {\n                ...state,\n                selectedPerformers: state.selectedPerformers.filter(performer => performer.name !== action.payload)\n            }\n        }\n        case \"ADD_PERFORMERS\": {\n            return {\n                ...state,\n                selectedPerformers: [...state.selectedPerformers, ...action.payload],\n                allPerformers: [...state.allPerformers, ...action.payload]\n            }\n        }\n        case \"REMOVE_PERFORMER\": {\n            return {\n                ...state,\n                selectedPerformers: state.selectedPerformers.filter(performer => performer.name !== action.payload),\n                allPerformers: state.allPerformers.filter(performer => performer.name !== action.payload)\n            }\n        }\n        case \"ADD_EVENTS\": {\n            return { ...state, events: [...state.events, ...action.payload] }\n        }\n        case \"REMOVE_EVENTS\": {\n            return { ...state, events: state.events.filter(event => event.title !== action.payload) }\n        }\n        default:\n            return state\n    }\n}\n\nconst persistedReducer = persistReducer<any, any>(persistConfig, performerReducer)\n\nexport const store = createStore(persistedReducer)\nexport const persistor = persistStore(store)\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    headerBar: {\n      backgroundColor: \"#ffffff\",\n      marginBottom: \"1rem\"\n    },\n    headerBarToolbar: {\n      ['@media (max-width:450px)']: {  // eslint-disable-line no-useless-computed-key\n        flexDirection: 'column',\n        alignItems: 'flex-start'\n      }\n    },\n    headerBarTitle: {\n        color: \"#000000\",\n        fontSize: \"1.5rem\"\n    },\n    headerBarSubTitle: {\n        color: \"#000000\",\n        fontSize: \"1rem\"\n    },\n    headerBarTextDiv: {\n        flexGrow: 1,\n        display: 'flex'\n    },\n    seatGeekImage: {\n      height: '45px',\n      marginLeft: '5px'\n    },\n    extraInfoText: {\n      color: \"#000000\",\n      fontSize: \"1rem\"\n    }\n  }),\n)\n\n\nconst HeaderBar = () => {\n\n    const classes = useStyles()\n\n    return (\n        <AppBar position=\"static\" className={classes.headerBar}>\n            <Toolbar className={classes.headerBarToolbar}>\n                <div className={classes.headerBarTextDiv}>\n                  <div>\n                      <Typography className={classes.headerBarTitle} variant=\"h1\">Seat Geek Calendar</Typography>\n                      <Typography className={classes.headerBarSubTitle} variant=\"h2\">\n                          Independently operated.  Powered by\n                      </Typography>\n                  </div>\n                  <a href=\"https://seatgeek.com/?seatgeekcalendardotcom=true\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img src=\"./SeatGeekLogo.png\" className={classes.seatGeekImage} alt=\"Seat Geek Calendar\" />\n                  </a>\n                </div>\n                <Typography className={classes.extraInfoText} variant=\"h2\">\n                  Questions?  <br/>\n                  <a href=\"mailto:seatgeekcalendar@gmail.com\">Send an email </a>\n                  or \n                  <a href=\"https://github.com/SheaMeyers/performer-calendar-app\" target=\"_blank\" rel=\"noopener noreferrer\"> see the code</a>\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default HeaderBar\n","export const SEATGEEK_ENDPOINT = 'https://api.seatgeek.com/2/'\nexport const SEATGEEK_APIKEY = 'MjE5Mjg3MTN8MTYyMTA3ODMzNC40NDc3NDI1'\n","import React, { useState, useEffect } from \"react\"\nimport Modal from \"react-modal\"\nimport axios from \"axios\"\nimport { useDispatch } from \"react-redux\"\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport { ShowPerformer, Event } from '../interfaces'\nimport { SEATGEEK_ENDPOINT, SEATGEEK_APIKEY } from '../api'\nimport '../css/Modal.css'\nimport '../css/SearchPerformersResultsModal.css'\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      display: 'flex',\n      alignItems: 'center',\n      margin: '1rem 0',\n      padding: '0 1rem',\n      cursor: 'pointer'\n    }\n  }),\n)\n\n\ninterface Props {\n    query: string\n    isOpen: boolean\n    handleModalClose: Function\n}\n\n\nconst SearchPerformersResultsModal = (props: Props) => {\n    const [results, setResults] = useState<ShowPerformer[] | null>(null)\n    const [feedback, setFeedback] = useState<string>('')\n    const dispatch = useDispatch()\n    const classes = useStyles()\n\n    useEffect(() => {\n        Modal.setAppElement('body')\n        if (props.query && props.isOpen) {\n            axios.get(`${SEATGEEK_ENDPOINT}performers?q=${props.query}&client_id=${SEATGEEK_APIKEY}`)\n              .then((response) => setResults(response.data.performers.map((performer: any): ShowPerformer => { \n                  return { \n                      id: performer.id,\n                      name: performer.name,\n                      hexColor: `#${Math.floor(Math.random()*16777215).toString(16)}`,\n                      showCheckbox: true\n                  }\n                })))\n              .catch((_) => setResults([]))\n        }\n    }, [props.isOpen])\n\n    return (\n        <Modal\n            isOpen={props.isOpen}\n            contentLabel='Display search results modal'\n            closeTimeoutMS={200}\n            className=\"modal search-performers-results-modal\"\n        >\n            <h2>Performers</h2>\n            {props.query === \"\" && <p>No value entered</p>}\n            {results === null && props.query !== '' && <p>Searching...</p>}\n            {results === [] && <p>No results found</p>}\n            {feedback && <p>{feedback}</p>}\n            {results && \n                results.map((result: ShowPerformer) => {\n                    return (\n                        <Paper \n                            key={result.id}\n                            className={classes.paper}\n                            onClick={_ => {\n                                setFeedback(`Getting events for ${result.name}. Please wait.`)\n                                axios.get(`${SEATGEEK_ENDPOINT}events?performers.id=${result.id}&client_id=${SEATGEEK_APIKEY}`)\n                                    .then(response => {\n                                        const events: Event[] = response.data.events.map((event: any) => {\n                                            return {\n                                                id: event.id,\n                                                title: result.name,\n                                                start: event.datetime_local,\n                                                end: event.datetime_local.split('T')[0] + 'T23:59:59',\n                                                hexColor: result.hexColor,\n                                                url: event.url\n                                            }\n                                        })\n                                        dispatch({ type: \"ADD_PERFORMERS\", payload: [result] })\n                                        dispatch({ type: \"ADD_EVENTS\", payload: events })\n                                        props.handleModalClose()\n                                        setResults(null)\n                                        setFeedback('')\n                                    }).catch(_ => {\n                                        props.handleModalClose()\n                                        setResults(null)\n                                        setFeedback('')\n                                    })\n                            }}\n                        >\n                            <p>{result.name}</p>\n                        </Paper>\n                    )\n                })\n            }\n            <Button \n                variant=\"contained\" \n                onClick={_ => {\n                    props.handleModalClose()\n                    setResults(null)\n            }}>\n                Close\n            </Button>\n        </Modal>\n    )\n}\n\nexport default SearchPerformersResultsModal\n","import React, { useState } from 'react'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport IconButton from '@material-ui/core/IconButton'\nimport InputBase from '@material-ui/core/InputBase'\nimport Paper from '@material-ui/core/Paper'\nimport SearchIcon from '@material-ui/icons/Search'\nimport SearchPerformersResultsModal from './SearchPerformersResultsModal'\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: '2px 4px',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1,\n    },\n    iconButton: {\n      padding: 10,\n    },\n  }),\n)\n\nconst SearchPerformers = () => {\n  const classes = useStyles()\n  const [query, setQuery] = useState<string>('')\n  const [shouldSearchedModalBeOpen, setShouldSearchedModalBeOpen] = useState<boolean>(false)\n\n  const closeSearchModal = () => {\n    setQuery('')\n    setShouldSearchedModalBeOpen(false)\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <InputBase\n        onChange={event => setQuery(event.target.value)}\n        value={query}\n        className={classes.input}\n        placeholder=\"Search Performers\"\n        inputProps={{ 'aria-label': 'Search performers' }}\n        onKeyDown={e => {\n          if (e.code === \"Enter\") {\n            setShouldSearchedModalBeOpen(true)\n          }\n        }}\n      />\n      <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\"  onClick={_ => setShouldSearchedModalBeOpen(true)}>\n        <SearchIcon />\n      </IconButton>\n      <SearchPerformersResultsModal \n        query={query}\n        isOpen={shouldSearchedModalBeOpen}\n        handleModalClose={closeSearchModal}\n      />\n    </Paper>\n  )\n\n}\n\nexport default SearchPerformers\n","import React, { useState } from 'react'\nimport { useDispatch } from \"react-redux\"\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Paper from '@material-ui/core/Paper'\nimport { ShowPerformer } from '../interfaces'\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      display: 'flex',\n      alignItems: 'center',\n      margin: '1rem 0',\n      padding: '0 1rem'\n    },\n    name: {\n      flexGrow: 1\n    },\n    icon: {\n      color: 'red',\n      cursor: 'pointer'\n    }\n  }),\n)\n\nconst Performer = (props: ShowPerformer) => {\n\n  const [checked, setChecked] = useState<boolean>(true)\n\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setChecked(event.target.checked)\n    if (event.target.checked) {\n      dispatch({ type: \"ADD_SELECTED_PERFORMER\", payload: props })\n    } else {\n      dispatch({ type: \"REMOVE_SELECTED_PERFORMER\", payload: props.name })\n    }\n  }\n\n  return (\n    <Paper className={classes.paper}>\n      {props.showCheckbox &&\n        <Checkbox\n          checked={checked}\n          onChange={handleChange}\n          style={{ color: `${props.hexColor}` }}\n        />\n      }\n      <p className={classes.name}>{props.name}</p>\n      <HighlightOffIcon\n        className={classes.icon}\n        onClick={_ => {\n          dispatch({ type: \"REMOVE_PERFORMER\", payload: props.name })\n          dispatch({ type: \"REMOVE_EVENTS\", payload: props.name })\n        }}\n      />\n    </Paper>\n  )\n\n}\n\nexport default Performer\n","import { useSelector } from \"react-redux\"\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport { ReduxState } from \"../redux\"\nimport SearchPerformers from './SearchPerformers'\nimport Performer from './Performer'\nimport { Performer as PerformerInterface } from '../interfaces'\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        paper: {\n            padding: '1rem',\n            background: 'lightgrey'\n        },\n    }),\n)\n\n\ninterface PerformerListProps {\n    showCheckbox?: boolean\n}\n\n\nconst PerformerList = (props: PerformerListProps) => {\n    const classes = useStyles()\n\n    const allPerformers = useSelector<ReduxState, ReduxState[\"allPerformers\"]>(\n        (state) => state.allPerformers\n      )\n\n    return (\n        <Paper className={classes.paper}>\n            <SearchPerformers />\n            {allPerformers.map((performer: PerformerInterface) => {\n                return (\n                    <Performer \n                        id={performer.id}\n                        key={performer.name} \n                        name={performer.name} \n                        hexColor={performer.hexColor} \n                        showCheckbox={props.showCheckbox}\n                    />\n                )\n            })}\n        </Paper>\n    )\n\n}\n\nexport default PerformerList\n","import { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\nimport { useSelector } from \"react-redux\"\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport { ReduxState } from \"../redux\"\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\nimport { Performer, Event } from '../interfaces'\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        card: {\n            margin: '1rem'\n        }\n    }),\n)\n\n\nconst PerformerCalendar = () => {\n\n    let events = useSelector<ReduxState, ReduxState[\"events\"]>(\n        (state) => state.events\n      )\n    const selectedPerformers = useSelector<ReduxState, ReduxState[\"selectedPerformers\"]>(\n        (state) => state.selectedPerformers\n      )\n    const performers_titles = selectedPerformers.map((selectedPerformers: Performer) => selectedPerformers.name)\n\n    const eventStyleGetter = (event: Event) => {\n        const style = {\n            backgroundColor: event.hexColor,\n            opacity: 0.8,\n            color: 'black',\n            border: event.border\n        }\n        return {\n            style: style\n        }\n    }\n\n    const eventTooltipGetter = (event: Event) => {\n        return event.tooltip || event.title\n    }\n\n    const handleOnSelectEvent = (event: Event, syntheticEvent: React.SyntheticEvent) => {\n        window.open(event.url, \"_blank\", \"noopener\")\n    }\n\n    const classes = useStyles()\n\n    return (\n        <Card className={classes.card}>\n            <CardContent>\n                <Calendar\n                    localizer={momentLocalizer(moment)}\n                    events={events\n                            .filter((event: Event) => performers_titles.includes(event.title))\n                            .map((event: Event) => ({ ...event, start: new Date(event.start), end: new Date(event.end) }))\n                        }\n                    startAccessor=\"start\"\n                    endAccessor=\"end\"\n                    style={{ height: 500 }}\n                    tooltipAccessor={eventTooltipGetter}\n                    eventPropGetter={eventStyleGetter}\n                    onSelectEvent={handleOnSelectEvent}\n                />\n            </CardContent>\n        </Card>\n    )\n}\n\nexport default PerformerCalendar\n","import React from 'react'\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport PerformersList from './PerformersList'\nimport PerformerCalendar from './PerformerCalendar'\nimport '../css/Home.css'\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      margin: '1rem'\n    }\n  }),\n)\n\nconst Home = () => {\n\n  const classes = useStyles()\n\n  return (\n    <div className=\"Home\">\n      <Card className={classes.card}>\n        <CardContent>\n          <h2>Performers</h2>\n          <PerformersList showCheckbox={true} />\n        </CardContent>\n      </Card>\n      <PerformerCalendar />\n    </div>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { store, persistor } from '../redux'\nimport HeaderBar from './HeaderBar'\nimport Home from './Home'\n\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <HeaderBar />\n        <Home />\n      </PersistGate>\n    </Provider>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './css/index.css'\nimport App from './components/App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}